name: test

on:
  pull_request:
  push:
    branches: [ "main", "v[0-9]*" ]
    tags: [ "v[0-9]*" ]
  workflow_dispatch:
  schedule:
    # Weekly test (on branch main) every Tuesday at 08:00 UTC.
    # (Used to monitor compatibility with tox releases and other dependencies.)
    - cron: "0 8 * * 2"

jobs:
  get-toxenvs:
    runs-on: ubuntu-latest
    outputs:
      toxenvs: ${{ steps.generate-toxenvs.outputs.toxenvs }}
    steps:
      - name: Get code
        uses: actions/checkout@v2
      - name: Install tox-gh-plugin
        run: |
          # If your project is *not* tox-gh-plugin itself, use this instead:
          #   python -m pip install tox tox-gh-plugin
          python -m pip install tox .
          tox --version
      - name: Generate toxenvs list
        id: generate-toxenvs
        run: python -m tox --gh-matrix
      - name: Generate toxenvs list (formatted JSON)
        # Not required, but helpful for seeing the generated JSON:
        run: python -m tox --gh-matrix-dump

  test:
    runs-on: ubuntu-latest
    needs: get-toxenvs
    strategy:
      matrix:
        tox: ${{ fromJSON(needs.get-toxenvs.outputs.toxenvs) }}
      fail-fast: false
    name: ${{ matrix.tox.name }} ${{ matrix.tox.ignore_outcome && 'allow-failures' || '' }}
    steps:
      - name: Get code
        uses: actions/checkout@v2
      - name: Setup Python ${{ matrix.tox.python.version }}
        if: matrix.tox.python.spec && ! matrix.tox.python.installed
        # Ensure matrix Python version is installed and available for tox
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.tox.python.spec }}
      - name: Install tox
        run: python -m pip install tox
      - name: Test ${{ matrix.tox.name }}
        run: |
          python --version
          python -m tox -e ${{ matrix.tox.name }}
        continue-on-error: ${{ matrix.tox.ignore_outcome == true }}
        env:
          TOX_OVERRIDE_IGNORE_OUTCOME: false
