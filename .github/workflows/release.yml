name: release

# To release this package, tag with "vX.Y.Z". (Either create
# and push the tag via git, or create and publish a GitHub release.)
# Note that setuptools_scm requires a full three-component version
# number, so use "vX.Y.0" rather than just "vX.Y".
#
# This workflow will run in response to the new tag, and will:
#    - Verify the source code and git tag version numbers match
#    - Publish the package to PyPI
#    - Create or update the release on GitHub

on:
  push:
    tags: [ "v[0-9]*" ]
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    environment: release
    steps:
      - name: Get code
        uses: actions/checkout@v2

      - name: Install packaging tools
        run: |
          python -m pip install --upgrade build setuptools_scm twine

      - name: Get version
        # (This will end the workflow if git tag doesn't match setuptools version.)
        id: version
        run: |
          VERSION="$(python -m setuptools_scm)"
          TAG="v$VERSION"
          GIT_TAG="$(git tag -l --points-at "$GITHUB_REF" 'v*')"
          if [ "$GIT_TAG" != "$TAG" ]; then
            echo "::error ::package version '$TAG' does not match git tag '$GIT_TAG'"
            exit 1
          fi
          echo "::set-output name=version::$VERSION"
          echo "::set-output name=tag::$TAG"
          echo "::set-output name=anchor::${TAG//[^[:alnum:]]/-}"

      - name: Build
        run: |
          rm -rf build dist src/*.egg-info
          python -m build
          python -m twine check dist/*

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
          TWINE_REPOSITORY: ${{ secrets.PYPI_REPOSITORY || 'pypi' }}
          TWINE_NON_INTERACTIVE: true
        run: |
          twine upload dist/*

      - name: Release to GitHub
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ steps.version.outputs.tag }}
          TITLE: ${{ steps.version.outputs.tag }}
          NOTES: |
            [Changelog](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md#${{ steps.version.outputs.anchor }})
        run: |
          # gh release create-or-edit "$TAG" --target "$GITHUB_REF" --title "$TITLE" --notes "$NOTES" ./dist/*
          # (gh release doesn't support edit - 6/2021)
          # (hub requires separate --attach=FILE arg for each file)
          FILES=(./dist/*)
          if ! hub release edit --message "$TITLE" --message "$NOTES" "${FILES[@]/#/--attach=}" "$TAG"; then
            hub release create -t "$GITHUB_SHA" --message "$TITLE" --message "$NOTES" "${FILES[@]/#/--attach=}" "$TAG"
          fi
